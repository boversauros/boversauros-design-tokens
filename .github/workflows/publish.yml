name: Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-publish-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      # Not need it here as we do not have dependencies
      # - name: Install dependencies
      #   run: npm ci

      - name: Build
        run: npm run build

      - name: Check version
        id: check
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view $PACKAGE_NAME version || echo "0.0.0")
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "New version detected: $CURRENT_VERSION"
            echo "::set-output name=new_version::true"
            echo "::set-output name=version::$CURRENT_VERSION"
          else
            echo "Version unchanged: $CURRENT_VERSION"
            echo "::set-output name=new_version::false"
          fi

      - name: Publish to npm
        if: steps.check.outputs.new_version == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install rclone
        run: sudo -v ; curl https://rclone.org/install.sh | sudo bash

      - name: Configure rclone
        run: |
          mkdir -p ~/.config/rclone
          echo "[r2]
          type = s3
          provider = Cloudflare
          access_key_id = ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
          secret_access_key = ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
          endpoint = https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com
          acl = private
          no_check_bucket = true" > ~/.config/rclone/rclone.conf

      - name: Debug rclone setup
        run: |
            rclone --version
            echo "rclone configuration:"
            sed 's/access_key_id = .*/access_key_id = REDACTED/' ~/.config/rclone/rclone.conf | sed 's/secret_access_key = .*/secret_access_key = REDACTED/'
  
      - name: Debug R2 Connection
        run: |
          echo "Checking if bucket exists:"
          rclone lsf r2:boversauros-tokens
          echo "Listing all buckets:"
          rclone lsf r2:
          echo "Attempting to list bucket contents:"
          rclone ls r2:boversauros-tokens
        env:
          RCLONE_CONFIG_R2_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
          RCLONE_CONFIG_R2_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
          RCLONE_CONFIG_R2_ENDPOINT: https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.coms

      # - name: Upload to R2
      #   run: |
      #     VERSION=${{ steps.check.outputs.version }}
      #     rclone sync ./dist r2:boversauros-tokens/$VERSION
      #     rclone sync ./dist r2:boversauros-tokens/latest