name: Publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-publish-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      # Not need it here as we do not have dependencies
      # - name: Install dependencies
      #   run: npm ci

      - name: Build
        run: npm run build

      - name: Check version
        id: check
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PUBLISHED_VERSION=$(npm view $PACKAGE_NAME version || echo "0.0.0")
          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "New version detected: $CURRENT_VERSION"
            echo "::set-output name=new_version::true"
            echo "::set-output name=version::$CURRENT_VERSION"
          else
            echo "Version unchanged: $CURRENT_VERSION"
            echo "::set-output name=new_version::false"
          fi

      - name: Publish to npm
        if: steps.check.outputs.new_version == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure AWS CLI for R2
        run: |
          mkdir -p ~/.aws
          echo "[default]
          aws_access_key_id = ${{ secrets.R2_ACCESS_KEY_ID }}
          aws_secret_access_key = ${{ secrets.R2_SECRET_ACCESS_KEY }}" > ~/.aws/credentials
          echo "[default]
          region = auto" > ~/.aws/config
  
      - name: Deploy to R2
        env:
          R2_ENDPOINT: https://${{ secrets.CLOUDFLARE_ACCOUNT_ID }}.r2.cloudflarestorage.com
          BUCKET_NAME: boversauros-tokens
        run: |
          echo "Uploading build files to R2..."
          aws s3 sync ./dist s3://$BUCKET_NAME/${{ steps.check.outputs.version }} --endpoint-url $R2_ENDPOINT
          aws s3 sync ./dist s3://$BUCKET_NAME/latest --endpoint-url $R2_ENDPOINT
          
          echo "Listing uploaded files:"
          aws s3 ls s3://$BUCKET_NAME/${{ steps.check.outputs.version }} --recursive --endpoint-url $R2_ENDPOINT
          
          echo "Done!"